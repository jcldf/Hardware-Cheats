//esse projeto faz o arduino emular um mouse e seguir o objeto determinado pela huskylens

#include "HUSKYLENS.h"

#include "SoftwareSerial.h"

#include <Mouse.h>

HUSKYLENS huskylens;
SoftwareSerial mySerial(10, 11); // RX, TX
//HUSKYLENS green line >> Pin 10; blue line >> Pin 11
void printResult(HUSKYLENSResult result);

void setup() {
  Serial.begin(115200);
  mySerial.begin(9600);
  Mouse.begin();
  while (!huskylens.begin(mySerial)) {
    Serial.println(F("Begin failed!"));
    Serial.println(F("1.Please recheck the \"Protocol Type\" in HUSKYLENS (General Settings>>Protocol Type>>Serial 9600)"));
    Serial.println(F("2.Please recheck the connection."));
    delay(100);
  }
}

void loop() {
  if (!huskylens.request()) Serial.println(F("Fail to request data from HUSKYLENS, recheck the connection!"));
  else if (!huskylens.isLearned()) Serial.println(F("Nothing learned, press learn button on HUSKYLENS to learn one!"));
  else if (!huskylens.available()) Serial.println(F("No block or arrow appears on the screen!"));
  else {
    Serial.println(F("###########"));
    while (huskylens.available()) {
      HUSKYLENSResult result = huskylens.read();
      printResult(result);

      int width = result.xCenter;
      int height = result.yCenter;
      Serial.print(width);
      Serial.print(" : ");
      Serial.println(height);
      //int x = map(width, 157, -157, 0, 315);
      //int y = map(height, 103, -103, 0, 207); 

      int x = map(width, 0, 320, -157, 157);
      int y = map(height, 0, 240, -103, 103);

      Serial.print(x);
      Serial.print(" : ");
      Serial.println(y);

      if (result.ID == 1) {
        if (x > 20 || x < -20) {
          Mouse.move(x, 0);
        }
        if (y > 20 || y < -20) {
          Mouse.move(0, y);
        }
      }

    }
  }
}

void printResult(HUSKYLENSResult result) {
  if (result.command == COMMAND_RETURN_BLOCK) {
    Serial.println(String() + F("Block:xCenter=") + result.xCenter + F(",yCenter=") + result.yCenter + F(",width=") + result.width + F(",height=") + result.height + F(",ID=") + result.ID);
  } else if (result.command == COMMAND_RETURN_ARROW) {
    Serial.println(String() + F("Arrow:xOrigin=") + result.xOrigin + F(",yOrigin=") + result.yOrigin + F(",xTarget=") + result.xTarget + F(",yTarget=") + result.yTarget + F(",ID=") + result.ID);
  } else {
    Serial.println("Object unknown!");
  }
}
